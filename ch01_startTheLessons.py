"""
1. 코딩 공부 방법:
	1. 디버깅: 내 의도에 맞게 됐는지 프로그램 실행 확인
	2. 알고리즘, 자료구조: 코딩 테스트 필수
	3. 다른 사람의 소스 코드 참조 --> github --> 오픈 소스
	4. 주석: 코드의 이해 증가, 나도 잊을 수 있고, 다른 사람의 이해를 위해
	5. 자기가 만들고 싶은 프로그램을 정확하게 정의 하는 것이 중요하다.

	예) A부터 B까지는 다음 사이트를 방문해야 한다.
	B부터 C까지는 다음 사이트에 뉴스를 정확하게 갖고 와야 되고
	D부터 E까지는 가져온 데이터(뉴스 기사)를, 텍스트 파일이나 엑셀 같은 것으로
	저장해야 한다. --> 이렇게 단위로 나눠서 정의하는 것이 중요하다.

	구글에서 코드를 긁어다가 쓰는 건 한계점에 부딪히게 된다.
	처음에 내가 만들고자 하는 프로그램의 어떤 구간 프로세스를 정확하게 이해하고
	단위 단위 코딩을 하면서 만들어서 최종적으로 완성을 해 나가야
	디버깅도 원할하게 할 수가 있다.

	이렇게 하다 보면 내가 뭐가 부족한지,
	또는 이 부분에서는 어떠한 언어로 사용하는 게 좀 더 효율적인지 알 수 있게 된다.

	다음과 같은 습관을 들여 놓아야 한다.
	좋은 프로그램
	1. 코드의 가독성: 모든 프로그램은 수정과 업그레이드를 한다.
	 	내가 만든 프로그램을 이후 나나 다른 이가 수정할 수 있다.
		처음 만들 때 읽기 쉽게 짜야 한다.
	2. 코드의 길이: 가독성과 연관, 불필요한 변수는 제거하라.
	3. 변수의 이름: 이름을 가지고 실력을 판단한다.
	4. 중복 코드를 줄이자: 불필요한 코드를 줄여야 가독성도 높아진다.
		공간 복잡도와 시간 복잡도를 최대한 감소시켜서 빠르게 실행되게 한다.
		좋은 결과물, 반응 속도를 높인다.
		알고리즘, 최적화된 코딩 스타일에 따라 코딩 기법에 따라서 프로그램을 작성하는
		것이 좋다.
		중복된 코드를 줄이고자 객체지향, 함수형 프로그램이 나왔다.

	구글링으로 배울 수 있는 그 경계선을 넘는 작업은 위와 같은 습관이 있느냐의
	여부에 따라 1군과 2군이	나눠진다.

	위 네 가지를 머릿속에 넣어 두고 문법 공부를 시작하면 된다.

	구글에서  python using sites 라고 검색해 봐라.
		가장 유명한 파이썬으로 만들어진 웹이 나온다.

	파이썬: 간결하고 쉽다. 파이썬으로 짠 것을 C나 Java로도 짜 보라.
		   무료, 오픈소스 강력하다.
		   이런 게 있지 않을까 하고 검색해 보면 거의 다 있다.
		   매우 짧은 시간에 복잡한 어플리케이션을 만들 수 있다.
		   빠른 개발 속도 (생산성)
		   협업 수월, 유지 보수도 수월

	분야
		GUI 프로그래밍: pyQT
		웹 프로그래밍: flask, django
		데이터 분석, 머신러닝: 다른 언어에 비해 오픈 소스, 알고리즘이 많다.
			자바의 오픈 소스에 비해 파이썬은 85%가 더 많다.
			판단스
		IOT: 라즈베리파이, 초소형 pc
		자유도가 매우 높은 안드로이드 분야에서 파이썬을 가지고 하긴 좀 약하다.
		이럴 땐 안드로이드, 자바, 코틀린 등을 사용하는 것이 좋다.
"""
